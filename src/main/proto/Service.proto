syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.example.grpc";

// Message
message StudentMessage {
  message LoadStudentRequest {
    int32 studentID = 1;
  }
  message LoadStudentResponse {
    repeated Student students = 1;
  }
  message Student {
    int32 studentID = 1;
    string lastName = 2;
    string firstName = 3;
    string department = 4;
    repeated int32 clearCourse = 5;
  }
}
message CourseMessage {
  message LoadCourseRequest {
    int32 courseID = 1;
  }
  message LoadCourseResponse {
    repeated Course courses = 1;
  }
  message Course {
    int32 courseID = 1;
    string professor = 2;
    string courseName = 3;
    repeated int32  prerequisiteCourse = 4;
  }
}
message LogInMessage {
  message LogInRequest {
    string studentID = 1;
    string password = 2;
  }
  message LogInResponse {
    int32 studentID = 1;
  }
}
message SignInMessage {
  message SignInRequest {
    string studentID = 1;
    string password = 2;
    StudentMessage.Student student = 3;
  }
  message SignInResponse {
    int32 studentID = 1;
    bool isSuccess = 2;
  }
}
message LoggingMessage {
  message SetLoggingRequest {
    int32 userID = 1;
    string command = 2;
    string timestamp = 3;
  }
  message SetLoggingResponse {
    int32 loggingID = 1;
    bool result = 2;
  }
  message GetLoggingRequest {
    int32 loggingID = 1;
  }
  message GetLoggingResponse {
    int32 userID = 1;
    string command = 2;
    string timestamp = 3;
  }
}

service LoadStudentService {
  rpc LoadStudent( StudentMessage.LoadStudentRequest ) returns ( StudentMessage.LoadStudentResponse ){}
}
service LoadCourseService {
  rpc LoadCourse( CourseMessage.LoadCourseRequest ) returns ( CourseMessage.LoadCourseResponse ){}
}
service LogInService {
  rpc logIn( LogInMessage.LogInRequest ) returns ( LogInMessage.LogInResponse ){}
}
service SignInService {
  rpc signIn( SignInMessage.SignInRequest ) returns ( SignInMessage.SignInResponse ){}
}
service SetLoggingService {
  rpc SetLogging( LoggingMessage.SetLoggingRequest ) returns ( LoggingMessage.SetLoggingResponse ){}
}
service GetLoggingService {
  rpc GetLogging( LoggingMessage.GetLoggingRequest ) returns ( LoggingMessage.GetLoggingResponse ){}
}