syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.example.grpc";

// Message
message StudentMessage {
  message LoadStudentRequest {
    int32 studentID = 1;
  }
  message LoadStudentResponse {
    repeated Student students = 1;
  }
  message DeleteStudentRequest {
    int32 userID = 1;
    Student student = 2;
  }
  message DeleteStudentResponse {
    int32 studentID = 1;
  }
  message MakeReservationRequest {
    int32 studentID = 1;
    int32 courseID = 2;
  }
  message MakeReservationResponse {
    int32 studentID = 1;
  }
  message Student {
    int32 studentID = 1;
    string lastName = 2;
    string firstName = 3;
    string department = 4;
    repeated int32 clearCourse = 5;
  }
}
message CourseMessage {
  message LoadCourseRequest {
    int32 courseID = 1;
  }
  message LoadCourseResponse {
    repeated Course courses = 1;
  }
  message DeleteCourseRequest {
    int32 userID = 1;
    Course course = 2;
  }
  message DeleteCourseResponse {
    int32 courseID = 1;
  }
  message Course {
    int32 courseID = 1;
    string professor = 2;
    string courseName = 3;
    repeated int32  prerequisiteCourse = 4;
  }
}
message LogInMessage {
  message LogInRequest {
    string studentID = 1;
    string password = 2;
  }
  message LogInResponse {
    int32 studentID = 1;
  }
}
message SignInMessage {
  message SignInRequest {
    string studentID = 1;
    string password = 2;
    StudentMessage.Student student = 3;
  }
  message SignInResponse {
    int32 studentID = 1;
    bool isSuccess = 2;
  }
}
message LogMessage {
  message GetLogByIDRequest {
    int32 userID = 1;
    int32 logID = 2;
  }
  message GetAllLogRequest {
    int32 userID = 1;
  }
  message AddLogRequest {
    int32 userID = 1;
    Log log = 2;
  }
  message GetAllLogResponse {
    repeated Log logs = 1;
  }
  message AddLogResponse {
    int32 logID = 1;
  }
  message Log {
    int32 logID = 1;
    string timestamp = 2;
    string command = 3;
    int32 userID = 4;
  }
}

service LoadStudentService {
  rpc LoadStudent( StudentMessage.LoadStudentRequest ) returns ( StudentMessage.LoadStudentResponse ){}
}
service LoadCourseService {
  rpc LoadCourse( CourseMessage.LoadCourseRequest ) returns ( CourseMessage.LoadCourseResponse ){}
}
service LogInService {
  rpc logIn( LogInMessage.LogInRequest ) returns ( LogInMessage.LogInResponse ){}
}
service SignInService {
  rpc signIn( SignInMessage.SignInRequest ) returns ( SignInMessage.SignInResponse ){}
}
service GetLogByIdService {
  rpc getLogById( LogMessage.GetLogByIDRequest ) returns ( LogMessage.Log ){}
}
service GetAllLogService {
  rpc getAllLog( LogMessage.GetAllLogRequest ) returns ( LogMessage.GetAllLogResponse ){}
}
service AddLogService {
  rpc addLog( LogMessage.AddLogRequest ) returns ( LogMessage.AddLogResponse ){}
}
service DeleteCourseService {
  rpc deleteCourse( CourseMessage.DeleteCourseRequest ) returns ( CourseMessage.DeleteCourseResponse ){}
}
service DeleteStudentService {
  rpc deleteStudent( StudentMessage.DeleteStudentRequest ) returns ( StudentMessage.DeleteStudentResponse ){}
}
service MakeReservationService {
  rpc makeReservation( StudentMessage.MakeReservationRequest ) returns ( StudentMessage.MakeReservationResponse ){}
}